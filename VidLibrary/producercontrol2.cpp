// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "producercontrol2.h"

// Dispatch interfaces referenced by this interface
#include "rmfile.h"
#include "targetaudienceinfo.h"
#include "enumidispatch.h"
#include "codecinfo.h"

/////////////////////////////////////////////////////////////////////////////
// CProducerControl2

IMPLEMENT_DYNCREATE(CProducerControl2, CWnd)

/////////////////////////////////////////////////////////////////////////////
// CProducerControl2 properties

/////////////////////////////////////////////////////////////////////////////
// CProducerControl2 operations

void CProducerControl2::SetBackColor(unsigned long newValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(DISPID_BACKCOLOR, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 newValue);
}

unsigned long CProducerControl2::GetBackColor()
{
	unsigned long result;
	InvokeHelper(DISPID_BACKCOLOR, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CProducerControl2::SetBackStyle(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xfffffe0a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CProducerControl2::GetBackStyle()
{
	long result;
	InvokeHelper(0xfffffe0a, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

BOOL CProducerControl2::GetIsSourceOpen()
{
	BOOL result;
	InvokeHelper(0xe77, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CProducerControl2::GetIsEncoding()
{
	BOOL result;
	InvokeHelper(0xe75, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CProducerControl2::OpenSource()
{
	InvokeHelper(0x10d1, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CProducerControl2::StartEncoding()
{
	InvokeHelper(0x10cd, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CProducerControl2::StopEncoding()
{
	InvokeHelper(0x10ce, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

long CProducerControl2::GetLastError()
{
	long result;
	InvokeHelper(0xe78, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

CString CProducerControl2::GetErrorString(long ErrorCode)
{
	CString result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x10d2, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		ErrorCode);
	return result;
}

void CProducerControl2::SendRealMediaEvent(long EventType, LPCTSTR EventText, long timestamp, long duration)
{
	static BYTE parms[] =
		VTS_I4 VTS_BSTR VTS_I4 VTS_I4;
	InvokeHelper(0x10cf, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 EventType, EventText, timestamp, duration);
}

void CProducerControl2::LoadProducerSettings()
{
	InvokeHelper(0x10d0, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

long CProducerControl2::GetOutputVideoWindowTarget()
{
	long result;
	InvokeHelper(0xe76, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CProducerControl2::SetOutputVideoWindowTarget(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xe76, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

void CProducerControl2::ShowVideoCardFormatDialog()
{
	InvokeHelper(0x10d3, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CProducerControl2::ShowVideoCardSourceDialog()
{
	InvokeHelper(0x10d4, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CProducerControl2::ShowVideoCardCompressionDialog()
{
	InvokeHelper(0x10d5, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

long CProducerControl2::GetNumTargetStreams()
{
	long result;
	InvokeHelper(0xe79, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

long CProducerControl2::GetNumAudioStreams()
{
	long result;
	InvokeHelper(0xe7a, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

long CProducerControl2::GetNumVideoStreams()
{
	long result;
	InvokeHelper(0xe7b, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CProducerControl2::GetTargetStream(long StreamIndex, long* TargetAudience, long* AudioStreamIndex, long* VideoStreamIndex, BOOL* Compatible50)
{
	static BYTE parms[] =
		VTS_I4 VTS_PI4 VTS_PI4 VTS_PI4 VTS_PBOOL;
	InvokeHelper(0x10d6, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 StreamIndex, TargetAudience, AudioStreamIndex, VideoStreamIndex, Compatible50);
}

void CProducerControl2::GetAudioStream(long StreamIndex, BSTR* CodecName, long* Bitrate, long* FrequencyResponse, long* Latency, long* Performance, BOOL* Compatible50)
{
	static BYTE parms[] =
		VTS_I4 VTS_PBSTR VTS_PI4 VTS_PI4 VTS_PI4 VTS_PI4 VTS_PBOOL;
	InvokeHelper(0x10d7, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 StreamIndex, CodecName, Bitrate, FrequencyResponse, Latency, Performance, Compatible50);
}

void CProducerControl2::GetVideoStream(long StreamIndex, BSTR* CodecName, long* Bitrate, float* FrameRate, long* Latency, long* Quality, long* Performance, BOOL* Compatible50)
{
	static BYTE parms[] =
		VTS_I4 VTS_PBSTR VTS_PI4 VTS_PR4 VTS_PI4 VTS_PI4 VTS_PI4 VTS_PBOOL;
	InvokeHelper(0x10d8, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 StreamIndex, CodecName, Bitrate, FrameRate, Latency, Quality, Performance, Compatible50);
}

void CProducerControl2::UpdateStatistics()
{
	InvokeHelper(0x10d9, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

long CProducerControl2::GetInputType()
{
	long result;
	InvokeHelper(0xc4f, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CProducerControl2::SetInputType(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xc4f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

CString CProducerControl2::GetInputFilename()
{
	CString result;
	InvokeHelper(0xc50, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

void CProducerControl2::SetInputFilename(LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0xc50, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 lpszNewValue);
}

long CProducerControl2::GetInputCaptureAudioDriver()
{
	long result;
	InvokeHelper(0xc51, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CProducerControl2::SetInputCaptureAudioDriver(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xc51, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CProducerControl2::GetInputCaptureVideoDriver()
{
	long result;
	InvokeHelper(0xc52, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CProducerControl2::SetInputCaptureVideoDriver(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xc52, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

BOOL CProducerControl2::GetInputDoAudio()
{
	BOOL result;
	InvokeHelper(0xc53, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CProducerControl2::SetInputDoAudio(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0xc53, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CProducerControl2::GetInputDoVideo()
{
	BOOL result;
	InvokeHelper(0xc54, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CProducerControl2::SetInputDoVideo(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0xc54, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CProducerControl2::GetInputDoEvents()
{
	BOOL result;
	InvokeHelper(0xc57, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CProducerControl2::SetInputDoEvents(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0xc57, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

long CProducerControl2::GetNumAudioDrivers()
{
	long result;
	InvokeHelper(0xc55, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

long CProducerControl2::GetNumVideoDrivers()
{
	long result;
	InvokeHelper(0xc56, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CProducerControl2::GetAudioDriverName(long Index, BSTR* AudioDriver)
{
	static BYTE parms[] =
		VTS_I4 VTS_PBSTR;
	InvokeHelper(0x1037, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 Index, AudioDriver);
}

void CProducerControl2::GetVideoDriverName(long Index, BSTR* VideoDriver)
{
	static BYTE parms[] =
		VTS_I4 VTS_PBSTR;
	InvokeHelper(0x1038, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 Index, VideoDriver);
}

BOOL CProducerControl2::GetDoOutputFile()
{
	BOOL result;
	InvokeHelper(0xc81, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CProducerControl2::SetDoOutputFile(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0xc81, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CProducerControl2::GetDoOutputServer()
{
	BOOL result;
	InvokeHelper(0xc82, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CProducerControl2::SetDoOutputServer(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0xc82, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

CString CProducerControl2::GetOutputFilename()
{
	CString result;
	InvokeHelper(0xc83, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

void CProducerControl2::SetOutputFilename(LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0xc83, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 lpszNewValue);
}

CString CProducerControl2::GetTempDirectory()
{
	CString result;
	InvokeHelper(0xc84, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

void CProducerControl2::SetTempDirectory(LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0xc84, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 lpszNewValue);
}

CString CProducerControl2::GetServerName()
{
	CString result;
	InvokeHelper(0xc85, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

void CProducerControl2::SetServerName(LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0xc85, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 lpszNewValue);
}

long CProducerControl2::GetServerPort()
{
	long result;
	InvokeHelper(0xc86, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CProducerControl2::SetServerPort(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xc86, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

CString CProducerControl2::GetServerFilename()
{
	CString result;
	InvokeHelper(0xc87, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

void CProducerControl2::SetServerFilename(LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0xc87, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 lpszNewValue);
}

CString CProducerControl2::GetServerUsername()
{
	CString result;
	InvokeHelper(0xc88, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

void CProducerControl2::SetServerUsername(LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0xc88, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 lpszNewValue);
}

CString CProducerControl2::GetServerPassword()
{
	CString result;
	InvokeHelper(0xc89, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

void CProducerControl2::SetServerPassword(LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0xc89, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 lpszNewValue);
}

long CProducerControl2::GetServerTransport()
{
	long result;
	InvokeHelper(0xc8a, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CProducerControl2::SetServerTransport(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xc8a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

BOOL CProducerControl2::GetListBroadcast()
{
	BOOL result;
	InvokeHelper(0xc8b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CProducerControl2::SetListBroadcast(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0xc8b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

CString CProducerControl2::GetTitle()
{
	CString result;
	InvokeHelper(0xcb3, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

void CProducerControl2::SetTitle(LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0xcb3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 lpszNewValue);
}

CString CProducerControl2::GetAuthor()
{
	CString result;
	InvokeHelper(0xcb4, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

void CProducerControl2::SetAuthor(LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0xcb4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 lpszNewValue);
}

CString CProducerControl2::GetCopyright()
{
	CString result;
	InvokeHelper(0xcb5, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

void CProducerControl2::SetCopyright(LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0xcb5, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 lpszNewValue);
}

CString CProducerControl2::GetDescription()
{
	CString result;
	InvokeHelper(0xcb6, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

void CProducerControl2::SetDescription(LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0xcb6, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 lpszNewValue);
}

CString CProducerControl2::GetKeywords()
{
	CString result;
	InvokeHelper(0xcb7, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

void CProducerControl2::SetKeywords(LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0xcb7, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 lpszNewValue);
}

long CProducerControl2::GetRating()
{
	long result;
	InvokeHelper(0xcb8, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CProducerControl2::SetRating(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xcb8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

BOOL CProducerControl2::GetIndexable()
{
	BOOL result;
	InvokeHelper(0xcb9, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CProducerControl2::SetIndexable(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0xcb9, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CProducerControl2::GetSelectiveRecord()
{
	BOOL result;
	InvokeHelper(0xcba, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CProducerControl2::SetSelectiveRecord(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0xcba, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CProducerControl2::GetMobilePlay()
{
	BOOL result;
	InvokeHelper(0xcbb, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CProducerControl2::SetMobilePlay(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0xcbb, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

void CProducerControl2::GetStringProperty(LPCTSTR PropertyName, BSTR* Value)
{
	static BYTE parms[] =
		VTS_BSTR VTS_PBSTR;
	InvokeHelper(0x10ff, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 PropertyName, Value);
}

void CProducerControl2::SetStringProperty(LPCTSTR PropertyName, LPCTSTR Value)
{
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR;
	InvokeHelper(0x1100, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 PropertyName, Value);
}

void CProducerControl2::GetNumberProperty(LPCTSTR PropertyName, long* Value)
{
	static BYTE parms[] =
		VTS_BSTR VTS_PI4;
	InvokeHelper(0x1101, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 PropertyName, Value);
}

void CProducerControl2::SetNumberProperty(LPCTSTR PropertyName, long Value)
{
	static BYTE parms[] =
		VTS_BSTR VTS_I4;
	InvokeHelper(0x1102, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 PropertyName, Value);
}

void CProducerControl2::RemoveProperty(LPCTSTR PropertyName)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x1103, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 PropertyName);
}

BOOL CProducerControl2::GetVideoCroppingEnabled()
{
	BOOL result;
	InvokeHelper(0xd17, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CProducerControl2::SetVideoCroppingEnabled(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0xd17, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CProducerControl2::GetVideoResizingEnabled()
{
	BOOL result;
	InvokeHelper(0xd18, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CProducerControl2::SetVideoResizingEnabled(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0xd18, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

long CProducerControl2::GetVideoCropLeft()
{
	long result;
	InvokeHelper(0xd19, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CProducerControl2::SetVideoCropLeft(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xd19, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CProducerControl2::GetVideoCropTop()
{
	long result;
	InvokeHelper(0xd1a, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CProducerControl2::SetVideoCropTop(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xd1a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CProducerControl2::GetVideoCropWidth()
{
	long result;
	InvokeHelper(0xd1b, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CProducerControl2::SetVideoCropWidth(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xd1b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CProducerControl2::GetVideoCropHeight()
{
	long result;
	InvokeHelper(0xd1c, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CProducerControl2::SetVideoCropHeight(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xd1c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CProducerControl2::GetVideoOutputWidth()
{
	long result;
	InvokeHelper(0xd1d, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CProducerControl2::SetVideoOutputWidth(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xd1d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CProducerControl2::GetVideoOutputHeight()
{
	long result;
	InvokeHelper(0xd1e, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CProducerControl2::SetVideoOutputHeight(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xd1e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CProducerControl2::GetVideoNoiseFiltering()
{
	long result;
	InvokeHelper(0xd1f, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CProducerControl2::SetVideoNoiseFiltering(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xd1f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

void CProducerControl2::GetInputVideoSize(long* Width, long* Height)
{
	static BYTE parms[] =
		VTS_PI4 VTS_PI4;
	InvokeHelper(0x1005, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 Width, Height);
}

BOOL CProducerControl2::GetTarget28KModem()
{
	BOOL result;
	InvokeHelper(0xd49, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CProducerControl2::SetTarget28KModem(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0xd49, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CProducerControl2::GetTarget56KModem()
{
	BOOL result;
	InvokeHelper(0xd4a, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CProducerControl2::SetTarget56KModem(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0xd4a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CProducerControl2::GetTargetSingleISDN()
{
	BOOL result;
	InvokeHelper(0xd4b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CProducerControl2::SetTargetSingleISDN(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0xd4b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CProducerControl2::GetTargetDualISDN()
{
	BOOL result;
	InvokeHelper(0xd4c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CProducerControl2::SetTargetDualISDN(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0xd4c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CProducerControl2::GetTargetDSLCableModem()
{
	BOOL result;
	InvokeHelper(0xd4d, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CProducerControl2::SetTargetDSLCableModem(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0xd4d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CProducerControl2::GetTargetLAN()
{
	BOOL result;
	InvokeHelper(0xd4e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CProducerControl2::SetTargetLAN(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0xd4e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

long CProducerControl2::GetAudioContent()
{
	long result;
	InvokeHelper(0xd4f, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CProducerControl2::SetAudioContent(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xd4f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CProducerControl2::GetVideoQuality()
{
	long result;
	InvokeHelper(0xd50, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CProducerControl2::SetVideoQuality(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xd50, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

BOOL CProducerControl2::GetSureStream()
{
	BOOL result;
	InvokeHelper(0xd51, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CProducerControl2::SetSureStream(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0xd51, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

long CProducerControl2::GetPlayerCompatibility()
{
	long result;
	InvokeHelper(0xd52, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CProducerControl2::SetPlayerCompatibility(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xd52, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

BOOL CProducerControl2::GetEmphasizeAudio()
{
	BOOL result;
	InvokeHelper(0xd53, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CProducerControl2::SetEmphasizeAudio(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0xd53, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CProducerControl2::GetDoAudioOnlyMultimedia()
{
	BOOL result;
	InvokeHelper(0xd54, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CProducerControl2::SetDoAudioOnlyMultimedia(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0xd54, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

CRmFile CProducerControl2::GetOpenRmFile(LPCTSTR bstrFilePath)
{
	LPDISPATCH pDispatch;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0xea7, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&pDispatch, parms,
		bstrFilePath);
	return CRmFile(pDispatch);
}

CTargetAudienceInfo CProducerControl2::GetTargetAudienceInfo(long TargetAudience)
{
	LPDISPATCH pDispatch;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xdad, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&pDispatch, parms,
		TargetAudience);
	return CTargetAudienceInfo(pDispatch);
}

void CProducerControl2::RestoreTargetDefaults()
{
	InvokeHelper(0x1069, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

CEnumIDispatch CProducerControl2::GetAudioCodecEnum()
{
	LPDISPATCH pDispatch;
	InvokeHelper(0xe43, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&pDispatch, NULL);
	return CEnumIDispatch(pDispatch);
}

CEnumIDispatch CProducerControl2::GetVideoCodecEnum()
{
	LPDISPATCH pDispatch;
	InvokeHelper(0xe44, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&pDispatch, NULL);
	return CEnumIDispatch(pDispatch);
}

CCodecInfo CProducerControl2::GetCodecInfo(LPDISPATCH codecId)
{
	LPDISPATCH pDispatch;
	static BYTE parms[] =
		VTS_DISPATCH;
	InvokeHelper(0xe45, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&pDispatch, parms,
		codecId);
	return CCodecInfo(pDispatch);
}

BOOL CProducerControl2::GetTarget256KDSLCableModem()
{
	BOOL result;
	InvokeHelper(0xd55, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CProducerControl2::SetTarget256KDSLCableModem(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0xd55, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CProducerControl2::GetTarget384KDSLCableModem()
{
	BOOL result;
	InvokeHelper(0xd56, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CProducerControl2::SetTarget384KDSLCableModem(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0xd56, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CProducerControl2::GetTarget512KDSLCableModem()
{
	BOOL result;
	InvokeHelper(0xd57, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CProducerControl2::SetTarget512KDSLCableModem(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0xd57, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CProducerControl2::GetTwoPassEncoding()
{
	BOOL result;
	InvokeHelper(0xed9, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CProducerControl2::SetTwoPassEncoding(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0xed9, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CProducerControl2::GetVbrEncoding()
{
	BOOL result;
	InvokeHelper(0xeda, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CProducerControl2::SetVbrEncoding(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0xeda, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

long CProducerControl2::GetVbrMaxStartupLatency()
{
	long result;
	InvokeHelper(0xedb, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CProducerControl2::SetVbrMaxStartupLatency(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xedb, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CProducerControl2::GetMaxTimeBetweenKeyframes()
{
	long result;
	InvokeHelper(0xedc, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CProducerControl2::SetMaxTimeBetweenKeyframes(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xedc, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

BOOL CProducerControl2::GetLossProtection()
{
	BOOL result;
	InvokeHelper(0xedd, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CProducerControl2::SetLossProtection(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0xedd, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CProducerControl2::GetHighQualityResize()
{
	BOOL result;
	InvokeHelper(0xede, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CProducerControl2::SetHighQualityResize(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0xede, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CProducerControl2::GetInverseTelecineFilter()
{
	BOOL result;
	InvokeHelper(0xedf, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CProducerControl2::SetInverseTelecineFilter(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0xedf, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CProducerControl2::GetDeInterlaceFilter()
{
	BOOL result;
	InvokeHelper(0xee0, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CProducerControl2::SetDeInterlaceFilter(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0xee0, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}
